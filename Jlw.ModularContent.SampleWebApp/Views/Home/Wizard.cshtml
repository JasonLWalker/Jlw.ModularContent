@using Jlw.ModularContent
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Newtonsoft.Json
@inject IWizardFactoryRepository FactoryRepository
@inject IWizardAdminSettings WizardSettings
@model object
@{
	string version = ModularWizardExtensions.Version;

	ViewData["Title"] = "Sample Wizard";
    ViewData["Breadcrumb"] ??= new List<KeyValuePair<string, string>>()
	{
        new KeyValuePair<string, string>(Url.Action("Index", "Home", new {Area = (string)null}), "Home"),
        new KeyValuePair<string, string>(Url.Action("Wizard", "Home",new {Area = (string)null}), "Sample Wizard"),
        new KeyValuePair<string, string>(Url.Action("Wizard", "Home",new {Area = (string)null}), "Start"),
    };
	string jsRoot = WizardSettings.JsRoot;
	string wizardName = "SampleWizard";
	var sideNav = FactoryRepository.GetWizardSideNavData(wizardName, null, WizardSettings?.GroupFilter);
	var modelFields = FactoryRepository.GetWizardModelFields(wizardName, WizardSettings?.GroupFilter);

}
<div class="row">
    @{
 	    if (WizardSettings.ShowSideNav)
	    {
		    <div class=" d-lg-inline-block wizard-nav-col col-lg-auto border-right">
			    <form method="post">
				    <div class="list-group wizard-nav">
					    <div class="list-group wizard-nav">
						    @{
							    foreach (var item in sideNav)
							    {
								    if (!item.IsHidden && !string.IsNullOrWhiteSpace(item.Label))
								    {
									    <button type="button" data-section="@item.Section" data-step="@item.Step" data-screen="@item.Screen" data-wizard="@item.Wizard" class="list-group-item list-group-item-action @item.ClassName"> @Html.Raw(item.Label)</button>
								    }
							    }
						    }
					    </div>
				    </div>
			    </form>
		    </div>
	    }
    }
    <div class="col-md wizard-form">
        <form method="post">
            <div class="h3 wizard-heading">@(ViewData["Heading"] ?? ViewData["Title"])</div>
            <div class="wizard-body clearfix">

                <div class="spinner-border spinner-border-sm float-start my-1" role="status"></div>
                <div class="p-0">
	                <div class="h5">&nbsp;Please wait, loading...</div>
	                <input type="hidden" name="step" value="" />
	                <input type="hidden" name="section" value="" />
	                @{
		                foreach (var field in modelFields)
		                {
			                <input type="hidden" name="@field" value="" />
		                }
	                }
                </div>
            </div>
            <div class="wizard-buttons row clearfix">
            </div>
        </form>
    </div>
</div>
@section Scripts{
    <script>

        (function(cacheVer) {
            function onPageLoadInit() {
                function fnInit() {
                    var bModalExists = (typeof $.fn['modal'] == "function")
                    if (bModalExists)
                        window.jlwUtility.showPleaseWait();

                    $.when(
                        window.jlwUtility.lazyLoadStyle('@Url.Content($"~/{jsRoot}/css/bootstrap.min.css")?_=' + cacheVer),
                        window.jlwUtility.lazyLoadStyle('@Url.Content($"~/{jsRoot}/css/toastr.min.css")?_=' + cacheVer),
                        window.jlwUtility.lazyLoadLibrary(window.libJlwWizardBase, '@Url.Action("WizardLibScript", "ModularWizardJs")?_=' + cacheVer),
                        window.jlwUtility.lazyLoadLibrary(window.libJlwAppBuilder, '@Url.Content($"~/{jsRoot}/js/libJlwAppBuilder.min.js")?_=' + cacheVer),
                        window.jlwUtility.lazyLoadLibrary(
                            window.___FONT_AWESOME___ &&
                            window.___FONT_AWESOME___.styles &&
                            window.___FONT_AWESOME___.styles.fas,
                            '@Url.Content($"~/{jsRoot}/font-awesome/js/solid.min.js")?_=' + cacheVer
                        )
                    ).done(function() {
                        window.bootbox.setDefaults({ centerVertical: true, scrollable: true });

                        (function(t, $, initOptions, undefined) {

                            var wiz = window.libJlwWizardBase(t || new window.libJlwUtility() || {}, $, initOptions, undefined);

                            t.wizardFields = @Html.Raw(JsonConvert.SerializeObject(FactoryRepository.GetWizardModelFields(wizardName, "Sample%") ?? new object()));
	                        @*[
                                'ApplicationId',
                                'DigitalSignature'
                            ];*@
                            //t.initializeWizard = initialize;
                            t.urlApiRoot = t.urlApiRoot || t.urlRoot + "api/Wizard";
                            t.onRenderWizardFormField = t.onRenderWizardFormField || onRenderWizardFormField;


                            if (initOptions)
                                initialize(initOptions);

                            function initialize(opts) {
                                currApplicationId = opts["ApplicationId"];
                                var btn = $("nav .breadcrumb .breadcrumb-item>a[href$='\/Wizard']");
                                /*
                                btn.data('section', 0);
                                btn.data('step', 0);

                                btn.off().on('click', t.fnOnClickAction);
                                */
                                t.navToScreen(opts['screen']).done(function() {
                                    //$('.wizard-form .wizard-body').html('');
                                    t.populateFormData(opts["formData"] || {}, $('.wizard-form'));
                                });

                            }

                        })(window.libSampleWizard = window.libSampleWizard || new window.libJlwUtility() || {}, window.jQuery, {
                            'urlRoot': '@Html.Raw(Url.Action("Index", "Home"))',
                            'urlApiRoot': '@Html.Raw(Url.Action("Index", "SampleWizardApi"))',
                            //'debugLevel':11,
                            'wizardParent': '.wizard-form',
                            'screen': "StartHere",
                            'wizard': "@wizardName"
                        });

                        window.jlwUtility.hidePleaseWait();

                    });
                }

                if (typeof window.jlwUtility == 'undefined') {
                    window.jlwUtility = new window.libJlwUtility({
                        'cacheVersion': cacheVer,
                        'libPaths': {
                            'jQuery': '@Url.Content($"~/{jsRoot}/js/jquery.min.js")?_=' + cacheVer,
                            'Bootstrap': '@Url.Content($"~/{jsRoot}/js/bootstrap.min.js")?_=' + cacheVer,
                            'Toastr': '@Url.Content($"~/{jsRoot}/js/toastr.min.js")?_=' + cacheVer,
                            'Bootbox': '@Url.Content($"~/{jsRoot}/js/bootbox.min.js")?_=' + cacheVer,
                            'FontAwesome': '@Url.Content($"~/{jsRoot}/font-awesome/js/fontawesome.min.js")?_=' + cacheVer,
                        },
                        'fnInit': function(){ window.setTimeout(fnInit, 50)}
                    });
                } else {
                    fnInit();
                }
            };


            if (typeof window.libJlwUtility == 'undefined') {
                var headTag = document.getElementsByTagName("head")[0];
                var jqTag = document.createElement('script');
                jqTag.type = 'text/javascript';
                jqTag.src = '@Url.Content($"~/{jsRoot}/js/libJlwUtility.min.js")?_=' + cacheVer;
                jqTag.onload = onPageLoadInit;
                headTag.appendChild(jqTag);
            } else {
                onPageLoadInit();
            }
        })('@version');
    </script>
}