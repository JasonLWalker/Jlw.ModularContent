@using Newtonsoft.Json
@model Jlw.ModularContent.WizardAdminSettings
<script>
    if (!window.jlwLibLocalizedContentText) {
        window.jlwLibLocalizedContentText = function($target, urlRoot, elemData, $) {
            if (!$) $ = window.jQuery;

            if (!elemData)
                elemData = {};

            $.fn.dataTable.ext.errMode = 'none';
            var t = new libJlwAppBuilder(urlRoot, $target);

            @if (Model?.CanEditLabelText ?? false)
            {
	            @:t.frmEdit = $('#jlwEditFormLocalizedContentText').html();
            }

            @if (Model?.CanInsertLabelText ?? false)
            {
                <text>
                    function fnOnAddRecord(fnOnShow) {
                        function fnShow(o, data) {
                            var oFrm = $(o);
                            $('input[name=GroupKey]', oFrm).val(elemData['GroupKey']);
                            $('input[name=FieldKey]', oFrm).val(elemData['FieldKey']);
                            $('select[name=Language]', oFrm).val('EN');
                            $('input[name=ParentKey]', oFrm).val(elemData['ParentKey']);
                            $('select[name=Language]', oFrm).parent().removeClass('d-none');

                            if (typeof fnOnShow == 'function')
                                fnOnShow(o, data);
                        }
                        return t.onAddRecord(fnShow);
                    }
                </text>
            }

            @if (Model?.CanEditLabelText ?? false)
            {
                <text>
                    function fnOnEditRecord(oBtn, fnOnShow) {
                        function fnShow(o, data) {
                            var oFrm = $(o);
                            $('input[name=GroupKey]', oFrm).val(elemData['GroupKey']);
                            $('input[name=FieldKey]', oFrm).val(elemData['FieldKey']);
                            $('input[name=ParentKey]', oFrm).val(elemData['ParentKey']);
                            $('select[name=Language]', oFrm).parent().addClass('d-none');
                            if (typeof fnOnShow == 'function')
                                fnOnShow(o, data);
                        }
                        return t.onEditRecord(oBtn, fnShow);
                    }

                    t.addDtRowButton('', 'btn-edit', 'fas fa-pencil-alt text-warning', 'btn-outline-secondary', fnOnEditRecord);
                </text>
            }

            @if (Model?.CanDeleteLabelText ?? false)
            {
                @:t.addDtRowButton('', 'btn-delete', 'fas fa-trash-alt text-danger', 'btn-outline-secondary', t.onDeleteRecord);
            }

            @if ((Model?.CanInsertLabelText ?? false) || (Model?.CanEditLabelText ?? false))
            {
                <text>
                    t.optionsWysiwyg = @Html.Raw(JsonConvert.SerializeObject(Model?.TinyMceSettings ?? new object()));

		            // Prevent Bootstrap dialog from blocking focusin
		            document.addEventListener('focusin', (e) => {
			            if (e.target.closest(".tox-tinymce-aux, .moxman-window, .tam-assetmanager-root") !== null) {
				            e.stopImmediatePropagation();
                        }
		            });
                </text>
            }

            t.fnPostDtAjaxData = function(d) {
                d.GroupKey = elemData["GroupKey"];
                d.FieldKey = elemData["FieldKey"];
                d.ParentKey = elemData["ParentKey"];
                d.Language = 'EN';
            }
            t.addDtRenderer(t.dtRenderButtons, [7]);
            var dt = t.initializeDataTable(t.sDtSelector);

            dt.on('error.dt',
                    function(e, settings, techNote, message) {
                        if (console)
                            console.log('An error has been reported by DataTables: ', message);
                    })
                .on('xhr.dt', function ( e, settings, json, xhr ) {
                    var data = xhr["responseJSON"];
                    t.checkAjaxMessage(data);
                } );



            @if (Model?.CanInsertLabelText ?? false)
            {
                @:t.addDtFooterButton(' Add New Record', 'btn-newrecord', 'fa fa-plus', 'btn-primary', fnOnAddRecord);
                @:$('.btn-newrecord').off('click').on('click', fnOnAddRecord);
            }
            t.dtRenderFooterButtons();
            return t;
        }
    }
</script>
